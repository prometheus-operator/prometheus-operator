---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: probes.monitoring.coreos.com
spec:
  group: monitoring.coreos.com
  names:
    categories:
    - prometheus-operator
    kind: Probe
    listKind: ProbeList
    plural: probes
    shortNames:
    - prb
    singular: probe
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          The `Probe` custom resource definition (CRD) defines how to scrape metrics from prober exporters such as the [blackbox exporter](https://github.com/prometheus/blackbox_exporter).

          The `Probe` resource needs 2 pieces of information:
          * The list of probed addresses which can be defined statically or by discovering Kubernetes Ingress objects.
          * The prober which exposes the availability of probed endpoints (over various protocols such HTTP, TCP, ICMP, ...) as Prometheus metrics.

          `Prometheus` and `PrometheusAgent` objects select `Probe` objects using label and namespace selectors.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the specification of desired Ingress selection
              for target discovery by Prometheus.
            properties:
              authorization:
                description: authorization section for this endpoint
                properties:
                  credentials:
                    description: credentials defines a key of a Secret in the namespace
                      that contains the credentials for authentication.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  type:
                    description: |-
                      type defines the authentication type. The value is case-insensitive.

                      "Basic" is not a supported value.

                      Default: "Bearer"
                    type: string
                type: object
              basicAuth:
                description: |-
                  basicAuth allow an endpoint to authenticate over basic authentication.
                  More info: https://prometheus.io/docs/operating/configuration/#endpoint
                properties:
                  password:
                    description: |-
                      password defines a key of a Secret containing the password for
                      authentication.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  username:
                    description: |-
                      username defines a key of a Secret containing the username for
                      authentication.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              bearerTokenSecret:
                description: |-
                  bearerTokenSecret defines the secret to mount to read bearer token for scraping targets. The secret
                  needs to be in the same namespace as the probe and accessible by
                  the Prometheus Operator.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              convertClassicHistogramsToNHCB:
                description: |-
                  convertClassicHistogramsToNHCB defines whether to convert all scraped classic histograms into a native histogram with custom buckets.
                  It requires Prometheus >= v3.0.0.
                type: boolean
              fallbackScrapeProtocol:
                description: |-
                  fallbackScrapeProtocol defines the protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.

                  It requires Prometheus >= v3.0.0.
                enum:
                - PrometheusProto
                - OpenMetricsText0.0.1
                - OpenMetricsText1.0.0
                - PrometheusText0.0.4
                - PrometheusText1.0.0
                type: string
              interval:
                description: |-
                  interval at which targets are probed using the configured prober.
                  If not specified Prometheus' global scrape interval is used.
                pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                type: string
              jobName:
                description: jobName assigned to scraped metrics by default.
                type: string
              keepDroppedTargets:
                description: |-
                  keepDroppedTargets defines the per-scrape limit on the number of targets dropped by relabeling
                  that will be kept in memory. 0 means no limit.

                  It requires Prometheus >= v2.47.0.
                format: int64
                type: integer
              labelLimit:
                description: |-
                  labelLimit defines the per-scrape limit on number of labels that will be accepted for a sample.
                  Only valid in Prometheus versions 2.27.0 and newer.
                format: int64
                type: integer
              labelNameLengthLimit:
                description: |-
                  labelNameLengthLimit defines the per-scrape limit on length of labels name that will be accepted for a sample.
                  Only valid in Prometheus versions 2.27.0 and newer.
                format: int64
                type: integer
              labelValueLengthLimit:
                description: |-
                  labelValueLengthLimit defines the per-scrape limit on length of labels value that will be accepted for a sample.
                  Only valid in Prometheus versions 2.27.0 and newer.
                format: int64
                type: integer
              metricRelabelings:
                description: metricRelabelings defines the RelabelConfig to apply
                  to samples before ingestion.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
                    scraped samples and remote write samples.

                    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                  properties:
                    action:
                      default: replace
                      description: |-
                        action to perform based on the regex matching.

                        `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                        `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

                        Default: "Replace"
                      enum:
                      - replace
                      - Replace
                      - keep
                      - Keep
                      - drop
                      - Drop
                      - hashmod
                      - HashMod
                      - labelmap
                      - LabelMap
                      - labeldrop
                      - LabelDrop
                      - labelkeep
                      - LabelKeep
                      - lowercase
                      - Lowercase
                      - uppercase
                      - Uppercase
                      - keepequal
                      - KeepEqual
                      - dropequal
                      - DropEqual
                      type: string
                    modulus:
                      description: |-
                        modulus to take of the hash of the source label values.

                        Only applicable when the action is `HashMod`.
                      format: int64
                      type: integer
                    regex:
                      description: regex defines the regular expression against which
                        the extracted value is matched.
                      type: string
                    replacement:
                      description: |-
                        replacement value against which a Replace action is performed if the
                        regular expression matches.

                        Regex capture groups are available.
                      type: string
                    separator:
                      description: separator defines the string between concatenated
                        SourceLabels.
                      type: string
                    sourceLabels:
                      description: |-
                        sourceLabels defines the source labels select values from existing labels. Their content is
                        concatenated using the configured Separator and matched against the
                        configured regular expression.
                      items:
                        description: |-
                          LabelName is a valid Prometheus label name which may only contain ASCII
                          letters, numbers, as well as underscores.
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                        type: string
                      type: array
                    targetLabel:
                      description: |-
                        targetLabel defines the label to which the resulting string is written in a replacement.

                        It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
                        `KeepEqual` and `DropEqual` actions.

                        Regex capture groups are available.
                      type: string
                  type: object
                type: array
              module:
                description: |-
                  module to use for probing specifying how to probe the target.
                  Example module configuring in the blackbox exporter:
                  https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
                type: string
              nativeHistogramBucketLimit:
                description: |-
                  nativeHistogramBucketLimit defines ff there are more than this many buckets in a native histogram,
                  buckets will be merged to stay within the limit.
                  It requires Prometheus >= v2.45.0.
                format: int64
                type: integer
              nativeHistogramMinBucketFactor:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  nativeHistogramMinBucketFactor defines if the growth factor of one bucket to the next is smaller than this,
                  buckets will be merged to increase the factor sufficiently.
                  It requires Prometheus >= v2.50.0.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              oauth2:
                description: oauth2 for the URL. Only valid in Prometheus versions
                  2.27.0 and newer.
                properties:
                  clientId:
                    description: |-
                      clientId defines a key of a Secret or ConfigMap containing the
                      OAuth2 client's ID.
                    properties:
                      configMap:
                        description: configMap defines the ConfigMap containing data
                          to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: secret defines the Secret containing data to
                          use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  clientSecret:
                    description: |-
                      clientSecret defines a key of a Secret containing the OAuth2
                      client's secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  endpointParams:
                    additionalProperties:
                      type: string
                    description: |-
                      endpointParams configures the HTTP parameters to append to the token
                      URL.
                    type: object
                  noProxy:
                    description: |-
                      noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
                      that should be excluded from proxying. IP and domain names can
                      contain port numbers.

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: string
                  proxyConnectHeader:
                    additionalProperties:
                      items:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    description: |-
                      proxyConnectHeader optionally specifies headers to send to
                      proxies during CONNECT requests.

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: object
                    x-kubernetes-map-type: atomic
                  proxyFromEnvironment:
                    description: |-
                      proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: boolean
                  proxyUrl:
                    description: proxyUrl defines the HTTP proxy server to use.
                    pattern: ^(http|https|socks5)://.+$
                    type: string
                  scopes:
                    description: scopes defines the OAuth2 scopes used for the token
                      request.
                    items:
                      type: string
                    type: array
                  tlsConfig:
                    description: |-
                      tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.
                      It requires Prometheus >= v2.43.0.
                    properties:
                      ca:
                        description: ca defines the Certificate authority used when
                          verifying server certificates.
                        properties:
                          configMap:
                            description: configMap defines the ConfigMap containing
                              data to use for the targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: secret defines the Secret containing data
                              to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      cert:
                        description: cert defines the Client certificate to present
                          when doing client-authentication.
                        properties:
                          configMap:
                            description: configMap defines the ConfigMap containing
                              data to use for the targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: secret defines the Secret containing data
                              to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      insecureSkipVerify:
                        description: insecureSkipVerify defines how to disable target
                          certificate validation.
                        type: boolean
                      keySecret:
                        description: keySecret defines the Secret containing the client
                          key file for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      maxVersion:
                        description: |-
                          maxVersion defines the maximum acceptable TLS version.

                          It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      minVersion:
                        description: |-
                          minVersion defines the minimum acceptable TLS version.

                          It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      serverName:
                        description: serverName is used to verify the hostname for
                          the targets.
                        type: string
                    type: object
                  tokenUrl:
                    description: tokenUrl defines the URL to fetch the token from.
                    minLength: 1
                    type: string
                required:
                - clientId
                - clientSecret
                - tokenUrl
                type: object
              params:
                description: |-
                  params defines the list of HTTP query parameters for the scrape.
                  Please note that the `.spec.module` field takes precedence over the `module` parameter from this list when both are defined.
                  The module name must be added using Module under ProbeSpec.
                items:
                  description: ProbeParam defines specification of extra parameters
                    for a Probe.
                  properties:
                    name:
                      description: name defines the parameter name
                      minLength: 1
                      type: string
                    values:
                      description: values defines the parameter values
                      items:
                        minLength: 1
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - name
                  type: object
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              prober:
                description: |-
                  prober defines the specification for the prober to use for probing targets.
                  The prober.URL parameter is required. Targets cannot be probed if left empty.
                properties:
                  noProxy:
                    description: |-
                      noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names
                      that should be excluded from proxying. IP and domain names can
                      contain port numbers.

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: string
                  path:
                    default: /probe
                    description: |-
                      path to collect metrics from.
                      Defaults to `/probe`.
                    type: string
                  proxyConnectHeader:
                    additionalProperties:
                      items:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                    description: |-
                      proxyConnectHeader optionally specifies headers to send to
                      proxies during CONNECT requests.

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: object
                    x-kubernetes-map-type: atomic
                  proxyFromEnvironment:
                    description: |-
                      proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).

                      It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
                    type: boolean
                  proxyUrl:
                    description: proxyUrl defines the HTTP proxy server to use.
                    pattern: ^(http|https|socks5)://.+$
                    type: string
                  scheme:
                    description: |-
                      scheme defines the HTTP scheme to use for scraping.
                      `http` and `https` are the expected values unless you rewrite the `__scheme__` label via relabeling.
                      If empty, Prometheus uses the default value `http`.
                    enum:
                    - http
                    - https
                    type: string
                  url:
                    description: url defines the mandatory URL of the prober.
                    type: string
                required:
                - url
                type: object
              sampleLimit:
                description: sampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              scrapeClass:
                description: scrapeClass defines the scrape class to apply.
                minLength: 1
                type: string
              scrapeClassicHistograms:
                description: |-
                  scrapeClassicHistograms defines whether to scrape a classic histogram that is also exposed as a native histogram.
                  It requires Prometheus >= v2.45.0.

                  Notice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.
                type: boolean
              scrapeProtocols:
                description: |-
                  scrapeProtocols defines the protocols to negotiate during a scrape. It tells clients the
                  protocols supported by Prometheus in order of preference (from most to least preferred).

                  If unset, Prometheus uses its default value.

                  It requires Prometheus >= v2.49.0.
                items:
                  description: |-
                    ScrapeProtocol represents a protocol used by Prometheus for scraping metrics.
                    Supported values are:
                    * `OpenMetricsText0.0.1`
                    * `OpenMetricsText1.0.0`
                    * `PrometheusProto`
                    * `PrometheusText0.0.4`
                    * `PrometheusText1.0.0`
                  enum:
                  - PrometheusProto
                  - OpenMetricsText0.0.1
                  - OpenMetricsText1.0.0
                  - PrometheusText0.0.4
                  - PrometheusText1.0.0
                  type: string
                type: array
                x-kubernetes-list-type: set
              scrapeTimeout:
                description: |-
                  scrapeTimeout defines the timeout for scraping metrics from the Prometheus exporter.
                  If not specified, the Prometheus global scrape timeout is used.
                  The value cannot be greater than the scrape interval otherwise the operator will reject the resource.
                pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                type: string
              targetLimit:
                description: targetLimit defines a limit on the number of scraped
                  targets that will be accepted.
                format: int64
                type: integer
              targets:
                description: targets defines a set of static or dynamically discovered
                  targets to probe.
                properties:
                  ingress:
                    description: |-
                      ingress defines the Ingress objects to probe and the relabeling
                      configuration.
                      If `staticConfig` is also defined, `staticConfig` takes precedence.
                    properties:
                      namespaceSelector:
                        description: namespaceSelector defines from which namespaces
                          to select Ingress objects.
                        properties:
                          any:
                            description: |-
                              any defines the boolean describing whether all namespaces are selected in contrast to a
                              list restricting them.
                            type: boolean
                          matchNames:
                            description: matchNames defines the list of namespace
                              names to select from.
                            items:
                              type: string
                            type: array
                        type: object
                      relabelingConfigs:
                        description: |-
                          relabelingConfigs to apply to the label set of the target before it gets
                          scraped.
                          The original ingress address is available via the
                          `__tmp_prometheus_ingress_address` label. It can be used to customize the
                          probed URL.
                          The original scrape job's name is available via the `__tmp_prometheus_job_name` label.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                        items:
                          description: |-
                            RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
                            scraped samples and remote write samples.

                            More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                          properties:
                            action:
                              default: replace
                              description: |-
                                action to perform based on the regex matching.

                                `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                                `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

                                Default: "Replace"
                              enum:
                              - replace
                              - Replace
                              - keep
                              - Keep
                              - drop
                              - Drop
                              - hashmod
                              - HashMod
                              - labelmap
                              - LabelMap
                              - labeldrop
                              - LabelDrop
                              - labelkeep
                              - LabelKeep
                              - lowercase
                              - Lowercase
                              - uppercase
                              - Uppercase
                              - keepequal
                              - KeepEqual
                              - dropequal
                              - DropEqual
                              type: string
                            modulus:
                              description: |-
                                modulus to take of the hash of the source label values.

                                Only applicable when the action is `HashMod`.
                              format: int64
                              type: integer
                            regex:
                              description: regex defines the regular expression against
                                which the extracted value is matched.
                              type: string
                            replacement:
                              description: |-
                                replacement value against which a Replace action is performed if the
                                regular expression matches.

                                Regex capture groups are available.
                              type: string
                            separator:
                              description: separator defines the string between concatenated
                                SourceLabels.
                              type: string
                            sourceLabels:
                              description: |-
                                sourceLabels defines the source labels select values from existing labels. Their content is
                                concatenated using the configured Separator and matched against the
                                configured regular expression.
                              items:
                                description: |-
                                  LabelName is a valid Prometheus label name which may only contain ASCII
                                  letters, numbers, as well as underscores.
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                type: string
                              type: array
                            targetLabel:
                              description: |-
                                targetLabel defines the label to which the resulting string is written in a replacement.

                                It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
                                `KeepEqual` and `DropEqual` actions.

                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      selector:
                        description: selector to select the Ingress objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  staticConfig:
                    description: |-
                      staticConfig defines the static list of targets to probe and the
                      relabeling configuration.
                      If `ingress` is also defined, `staticConfig` takes precedence.
                      More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: labels defines all labels assigned to all metrics
                          scraped from the targets.
                        type: object
                      relabelingConfigs:
                        description: |-
                          relabelingConfigs defines relabelings to be apply to the label set of the targets before it gets
                          scraped.
                          More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                        items:
                          description: |-
                            RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
                            scraped samples and remote write samples.

                            More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
                          properties:
                            action:
                              default: replace
                              description: |-
                                action to perform based on the regex matching.

                                `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0.
                                `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0.

                                Default: "Replace"
                              enum:
                              - replace
                              - Replace
                              - keep
                              - Keep
                              - drop
                              - Drop
                              - hashmod
                              - HashMod
                              - labelmap
                              - LabelMap
                              - labeldrop
                              - LabelDrop
                              - labelkeep
                              - LabelKeep
                              - lowercase
                              - Lowercase
                              - uppercase
                              - Uppercase
                              - keepequal
                              - KeepEqual
                              - dropequal
                              - DropEqual
                              type: string
                            modulus:
                              description: |-
                                modulus to take of the hash of the source label values.

                                Only applicable when the action is `HashMod`.
                              format: int64
                              type: integer
                            regex:
                              description: regex defines the regular expression against
                                which the extracted value is matched.
                              type: string
                            replacement:
                              description: |-
                                replacement value against which a Replace action is performed if the
                                regular expression matches.

                                Regex capture groups are available.
                              type: string
                            separator:
                              description: separator defines the string between concatenated
                                SourceLabels.
                              type: string
                            sourceLabels:
                              description: |-
                                sourceLabels defines the source labels select values from existing labels. Their content is
                                concatenated using the configured Separator and matched against the
                                configured regular expression.
                              items:
                                description: |-
                                  LabelName is a valid Prometheus label name which may only contain ASCII
                                  letters, numbers, as well as underscores.
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                type: string
                              type: array
                            targetLabel:
                              description: |-
                                targetLabel defines the label to which the resulting string is written in a replacement.

                                It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,
                                `KeepEqual` and `DropEqual` actions.

                                Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      static:
                        description: static defines the list of hosts to probe.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              tlsConfig:
                description: tlsConfig defines the TLS configuration to use when scraping
                  the endpoint.
                properties:
                  ca:
                    description: ca defines the Certificate authority used when verifying
                      server certificates.
                    properties:
                      configMap:
                        description: configMap defines the ConfigMap containing data
                          to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: secret defines the Secret containing data to
                          use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  cert:
                    description: cert defines the Client certificate to present when
                      doing client-authentication.
                    properties:
                      configMap:
                        description: configMap defines the ConfigMap containing data
                          to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: secret defines the Secret containing data to
                          use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  insecureSkipVerify:
                    description: insecureSkipVerify defines how to disable target
                      certificate validation.
                    type: boolean
                  keySecret:
                    description: keySecret defines the Secret containing the client
                      key file for the targets.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  maxVersion:
                    description: |-
                      maxVersion defines the maximum acceptable TLS version.

                      It requires Prometheus >= v2.41.0 or Thanos >= v0.31.0.
                    enum:
                    - TLS10
                    - TLS11
                    - TLS12
                    - TLS13
                    type: string
                  minVersion:
                    description: |-
                      minVersion defines the minimum acceptable TLS version.

                      It requires Prometheus >= v2.35.0 or Thanos >= v0.28.0.
                    enum:
                    - TLS10
                    - TLS11
                    - TLS12
                    - TLS13
                    type: string
                  serverName:
                    description: serverName is used to verify the hostname for the
                      targets.
                    type: string
                type: object
            type: object
          status:
            description: |-
              status defines the status subresource. It is under active development and is updated only when the
              "StatusForConfigurationResources" feature gate is enabled.

              Most recent observed status of the Probe. Read-only.
              More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              bindings:
                description: bindings defines the list of workload resources (Prometheus,
                  PrometheusAgent, or ThanosRuler) which select the configuration
                  resource.
                items:
                  description: WorkloadBinding is a link between a configuration resource
                    and a workload resource.
                  properties:
                    conditions:
                      description: conditions defines the current state of the configuration
                        resource when bound to the referenced Prometheus object.
                      items:
                        description: ConfigResourceCondition describes the status
                          of configuration resources linked to Prometheus, PrometheusAgent,
                          Alertmanager, or ThanosRuler.
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime defines the time of the
                              last update to the current status property.
                            format: date-time
                            type: string
                          message:
                            description: message defines the human-readable message
                              indicating details for the condition's last transition.
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration defines the .metadata.generation that the
                              condition was set based upon. For instance, if `.metadata.generation` is
                              currently 12, but the `.status.conditions[].observedGeneration` is 9, the
                              condition is out of date with respect to the current state of the object.
                            format: int64
                            type: integer
                          reason:
                            description: reason for the condition's last transition.
                            type: string
                          status:
                            description: status of the condition.
                            minLength: 1
                            type: string
                          type:
                            description: |-
                              type of the condition being reported.
                              Currently, only "Accepted" is supported.
                            enum:
                            - Accepted
                            minLength: 1
                            type: string
                        required:
                        - lastTransitionTime
                        - status
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    group:
                      description: group defines the group of the referenced resource.
                      enum:
                      - monitoring.coreos.com
                      type: string
                    name:
                      description: name defines the name of the referenced object.
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace defines the namespace of the referenced
                        object.
                      minLength: 1
                      type: string
                    resource:
                      description: resource defines the type of resource being referenced
                        (e.g. Prometheus, PrometheusAgent, or ThanosRuler).
                      enum:
                      - prometheuses
                      - prometheusagents
                      - thanosrulers
                      type: string
                  required:
                  - group
                  - name
                  - namespace
                  - resource
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                - name
                - namespace
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
