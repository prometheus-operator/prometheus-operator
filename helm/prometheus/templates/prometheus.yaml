apiVersion: {{ template "prometheus-operator.apiVersion" . }}
kind: Prometheus
metadata:
  labels:
    app: {{ template "prometheus.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    prometheus: {{ .Release.Name }}
    release: {{ .Release.Name }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}
spec:
{{- if .Values.alertingEndpoints }}
  alerting:
    alertmanagers:
{{ toYaml .Values.alertingEndpoints | indent 6 }}
{{- else }}
  alerting:
    alertmanagers:
      - namespace: {{ .Release.Namespace }}
        name: {{ printf "%s-alertmanager" .Release.Name | trunc 63 | trimSuffix "-" }}
        port: http
{{- end }}
  baseImage: "{{ .Values.image.repository }}"
{{- if .Values.externalLabels }}
  externalLabels:
{{ toYaml .Values.externalLabels | indent 4}}
{{- end }}
{{- if .Values.externalUrl }}
  externalUrl: "{{ .Values.externalUrl }}"
{{- else if .Values.ingress.fqdn }}
  externalUrl: http://{{ .Values.ingress.fqdn }}{{ .Values.routePrefix }}
{{- else }}
  externalUrl: http://{{ template "prometheus.fullname" . }}.{{ .Release.Namespace }}:9090
{{- end }}
{{- if .Values.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.nodeSelector | indent 4 }}
{{- end }}
  paused: {{ .Values.paused }}
  replicas: {{ .Values.replicaCount }}
  logLevel:  {{ .Values.logLevel }}
  resources:
{{ toYaml .Values.resources | indent 4 }}
  retention: "{{ .Values.retention }}"
{{- if .Values.routePrefix }}
  routePrefix: "{{ .Values.routePrefix }}"
{{- end }}
{{- if .Values.secrets }}
  secrets:
{{ toYaml .Values.secrets | indent 4 }}
{{- end }}
{{- if .Values.global.rbacEnable }}
  serviceAccountName: {{ template "prometheus.fullname" . }}
{{- end }}
{{ if and .Values.config.specifiedInValues .Values.config.value }}
{{- else if .Values.serviceMonitorsSelector }}
  serviceMonitorSelector:
{{ toYaml .Values.serviceMonitorsSelector | indent 4 }}
{{- else }}
  serviceMonitorSelector:
    matchLabels:
      prometheus: {{ .Release.Name }}
{{- end }}
{{- if .Values.remoteRead }}
  remoteRead:
{{ toYaml .Values.remoteRead | indent 4 }}
{{- end }}
{{- if .Values.remoteWrite }}
  remoteWrite:
{{ toYaml .Values.remoteWrite | indent 4 }}
{{- end }}
{{- if .Values.rulesSelector }}
  ruleSelector:
{{ toYaml .Values.rulesSelector | indent 4 }}
{{- else }}
  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: {{ .Release.Name }}
{{- end }}
{{- if .Values.storageSpec }}
  storage:
{{ toYaml .Values.storageSpec | indent 4 }}
{{- end }}
  version: "{{ .Values.image.tag }}"
{{- if eq .Values.podAntiAffinity "hard" }}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: kubernetes.io/hostname
        labelSelector:
          matchLabels:
            app: {{ template "prometheus.name" . }}
            prometheus: {{ .Release.Name }}
{{- else if eq .Values.podAntiAffinity "soft" }}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: {{ template "prometheus.name" . }}
              prometheus: {{ .Release.Name }}
{{- end }}
{{- if .Values.tolerations }}
  tolerations:
{{ toYaml .Values.tolerations | indent 4 }}
{{- end }}
