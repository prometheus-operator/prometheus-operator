# Default values for kube-state-metrics.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
rbacEnable: true
kube_state_metrics:
  image:
    repository: gcr.io/google_containers/kube-state-metrics
    tag: v1.0.1
    pullPolicy: IfNotPresent
  service:
    name: kube-state-metrics
    type: ClusterIP
    externalPort: 80
    internalPort: 8080
addon_resizer:
  image:
    repository: gcr.io/google_containers/addon-resizer
    tag: "1.0"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 30Mi
    requests:
      cpu: 100m
      memory: 30Mi
ruleFiles:
  kube-state.rules: |-
    # NOTE: These rules were kindly contributed by the SoundCloud engineering team.

    ALERT K8SNodeNotReady
      IF kube_node_status_condition{condition="Ready", status="true"} == 0
      FOR 1h
      LABELS {
        service = "k8s",
        severity = "warning",
      }
      ANNOTATIONS {
        summary = "Node status is NotReady",
        description = "The Kubelet on {{`{{ $labels.node }}`}} has not checked in with the API, or has set itself to NotReady, for more than an hour",
      }

    ALERT K8SManyNodesNotReady
      IF
        count by (cluster) (kube_node_status_condition{condition="Ready", status="true"} == 0) > 1
        AND
          (
            count by (cluster) (kube_node_status_condition{condition="Ready", status="true"} == 0)
          /
            count by (cluster) (kube_node_status_condition{condition="Ready", status="true"})
          ) > 0.2
      FOR 1m
      LABELS {
        service = "k8s",
        severity = "critical",
      }
      ANNOTATIONS {
        summary = "Many K8s nodes are Not Ready",
        description = "{{`{{ $value }}`}} K8s nodes (more than 10% of cluster {{`{{ $labels.cluster }}`}}) are in the NotReady state.",
      }
