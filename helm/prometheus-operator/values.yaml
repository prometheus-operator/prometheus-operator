global:
  ## Hyperkube image to use when getting ThirdPartyResources & cleaning up
  ##
  hyperkube:
    repository: quay.io/coreos/hyperkube
    tag: v1.7.6_coreos.0
    pullPolicy: IfNotPresent

## Prometheus-config-reloader image to use for config and rule reloading
##
prometheusConfigReloader:
  repository: quay.io/coreos/prometheus-config-reloader
  tag: v0.20.0

## Configmap-reload image to use for reloading configmaps
##
configmapReload:
  repository: quay.io/coreos/configmap-reload
  tag: v0.0.1

## Prometheus-operator image
##
image:
  repository: quay.io/coreos/prometheus-operator
  tag: v0.20.0
  pullPolicy: IfNotPresent

## If enabled, prometheus-operator will create a service for scraping kubelets
##
kubeletService:
  enable: true
  namespace: kube-system
  name: kubelet

## Node labels for prometheus-operator pod assignment
##
nodeSelector: {}

## Tolerations for use with node taints
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}

## If true, create & use RBAC resources
##
rbacEnable: true

## If true, create Pod Security Policy resources
pspEnable: true

# Reference to one or more secrets to be used when pulling images
imagePullSecrets: []
#  - name: "image-pull-secret"

# Use logfmt (default) or json-formatted logging
# logFormat: logfmt

## Prometheus-operator resource limits & requests
## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 100Mi
  # requests:
  #   cpu: 100m
  #   memory: 50Mi

jobLabel: prometheus-operator
