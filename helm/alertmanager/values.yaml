## Alertmanager configuration directives
## Ref: https://prometheus.io/docs/alerting/configuration/
##
config:
  global:
    resolve_timeout: 5m
  route:
    group_by: ['job']
    group_wait: 30s
    group_interval: 5m
    repeat_interval: 12h
    receiver: 'null'
    routes:
    - match:
        alertname: DeadMansSwitch
      receiver: 'null'
  receivers:
  - name: 'null'

## Alertmanager template files to include
#
templateFiles: {}
#
# An example template:
#   template_1.tmpl: |-
#       {{ define "cluster" }}{{ .ExternalURL | reReplaceAll ".*alertmanager\\.(.*)" "$1" }}{{ end }}
#
#       {{ define "slack.myorg.text" }}
#       {{- $root := . -}}
#       {{ range .Alerts }}
#         *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
#         *Cluster:*  {{ template "cluster" $root }}
#         *Description:* {{ .Annotations.description }}
#         *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>
#         *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
#         *Details:*
#           {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
#           {{ end }}

## The name of a secret in the same kubernetes namespace which contains the Alertmanager config
## If defined this will be used instead of the `config` block values.
## The name of the secret must be alertmanager-{{ .Release.Name }} and its data must contain, at least, a key called `alertmanager.yaml`
## that contains the configuration as value.
##
configFromSecret: ""

## External URL at which Alertmanager will be reachable
##
externalUrl: ""

## If true, create a serviceMonitor for alertmanager
##
selfServiceMonitor: true

## Custom Labels to be added to ServiceMonitor
##
additionalServiceMonitorLabels: {}

##Custom Labels to be added to Prometheus Rules CRD
##
additionalRulesLabels: {}

## Alertmanager container image
##
image:
  repository: quay.io/prometheus/alertmanager
  tag: v0.15.1

## Labels to be added to the Alertmanager
##
labels: {}

## "prometheus" label value for ServiceMonitor ConfigMap and Prometheus Rules CRD
## Release.Name by default
prometheusLabelValue: ""

ingress:
  ## If true, Alertmanager Ingress will be created
  ##
  enabled: false

  ## Annotations for Alertmanager Ingress
  ##
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  ## Labels to be added to the Ingress
  ##
  labels: {}

  ## Hostnames.
  ## Must be provided if Ingress is enabled.
  ##
  # hosts:
  #   - alertmanager.domain.com
  hosts: []

  ## TLS configuration for Alertmanager Ingress
  ## Secret must be manually created in the namespace
  ##
  tls: []
    # - secretName: alertmanager-general-tls
    #   hosts:
    #     - alertmanager.example.com

## Node labels for Alertmanager pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for use with node taints
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}
  #  - key: "key"
  #    operator: "Equal"
  #    value: "value"
  #    effect: "NoSchedule"



## If true, the Operator won't process any Alertmanager configuration changes
##
paused: false

## Number of Alertmanager replicas desired
##
replicaCount: 1

## Pod anti-affinity can prevent the scheduler from placing Alertmanager replicas on the same node.
## The default value "soft" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.
## The value "hard" means that the scheduler is *required* to not schedule two replica pods onto the same node.
## The value "" will disable pod anti-affinity so that no anti-affinity rules will be configured.
podAntiAffinity: "soft"

## Resource limits & requests
## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
  # requests:
  #   memory: 400Mi

service:
  ## Annotations to be added to the Service
  ##
  annotations: {}

  ## Cluster-internal IP address for Alertmanager Service
  ##
  clusterIP: ""

  ## List of external IP addresses at which the Alertmanager Service will be available
  ##
  externalIPs: []

  ## Labels to be added to the Service
  ##
  labels: {}

  ## External IP address to assign to Alertmanager Service
  ## Only used if service.type is 'LoadBalancer' and supported by cloud provider
  ##
  loadBalancerIP: ""

  ## List of client IPs allowed to access Alertmanager Service
  ## Only used if service.type is 'LoadBalancer' and supported by cloud provider
  ##
  loadBalancerSourceRanges: []

  ## Port to expose on each node
  ## Only used if service.type is 'NodePort'
  ##
  nodePort: 30903

  ## Service type
  ##
  type: ClusterIP

## If true, create & use RBAC resources resp. Pod Security Policies
##
global:
  rbacEnable: true
  pspEnable: true
  
  # Reference to one or more secrets to be used when pulling images
  imagePullSecrets: []
  #  - name: "image-pull-secret"

## Alertmanager StorageSpec for persistent data
## Ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/user-guides/storage.md
##
storageSpec: {}
#  volumeClaimTemplate:
#    spec:
#      storageClassName: gluster
#      accessModes: ["ReadWriteOnce"]
#      resources:
#        requests:
#          storage: 50Gi
#    selector: {}

# default rules are in templates/alertmanager.rules.yaml
# prometheusRules: {}
