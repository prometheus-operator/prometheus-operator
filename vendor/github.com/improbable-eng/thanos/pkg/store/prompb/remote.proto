// Copyright 2016 Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// NOTE(fabxc): this is just hard-copied from prometheus/prometheus/prompb
// since depending on the generated package just added dependency complexities.
// It is also generated in a way that makes heavy use of pointers, e.g. for each sample
// which we want to avoid for ourselves.

syntax = "proto3";
package prometheus;

import "gogoproto/gogo.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

option go_package = "prompb";

message ReadRequest {
  repeated Query queries = 1 [(gogoproto.nullable) = false];
}

message ReadResponse {
  // In same order as the request's queries.
  repeated QueryResult results = 1 [(gogoproto.nullable) = false];
}

message Query {
  int64 start_timestamp_ms = 1;
  int64 end_timestamp_ms = 2;
  repeated LabelMatcher matchers = 3 [(gogoproto.nullable) = false];
}

message QueryResult {
  repeated TimeSeries timeseries = 1 [(gogoproto.nullable) = false];
}

message Sample {
  double value    = 1;
  int64 timestamp = 2;
}

message TimeSeries {
  repeated Label labels   = 1 [(gogoproto.nullable) = false];
  repeated Sample samples = 2 [(gogoproto.nullable) = false];
}

message Label {
  string name  = 1;
  string value = 2;
}

// Matcher specifies a rule, which can match or set of labels or not.
message LabelMatcher {
  enum Type {
    EQ  = 0;
    NEQ = 1;
    RE  = 2;
    NRE = 3;
  }
  Type type    = 1;
  string name  = 2;
  string value = 3;
}