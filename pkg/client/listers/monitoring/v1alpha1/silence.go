// Copyright The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	monitoringv1alpha1 "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SilenceLister helps list Silences.
// All objects returned here must be treated as read-only.
type SilenceLister interface {
	// List lists all Silences in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*monitoringv1alpha1.Silence, err error)
	// Silences returns an object that can list and get Silences.
	Silences(namespace string) SilenceNamespaceLister
	SilenceListerExpansion
}

// silenceLister implements the SilenceLister interface.
type silenceLister struct {
	listers.ResourceIndexer[*monitoringv1alpha1.Silence]
}

// NewSilenceLister returns a new SilenceLister.
func NewSilenceLister(indexer cache.Indexer) SilenceLister {
	return &silenceLister{listers.New[*monitoringv1alpha1.Silence](indexer, monitoringv1alpha1.Resource("silence"))}
}

// Silences returns an object that can list and get Silences.
func (s *silenceLister) Silences(namespace string) SilenceNamespaceLister {
	return silenceNamespaceLister{listers.NewNamespaced[*monitoringv1alpha1.Silence](s.ResourceIndexer, namespace)}
}

// SilenceNamespaceLister helps list and get Silences.
// All objects returned here must be treated as read-only.
type SilenceNamespaceLister interface {
	// List lists all Silences in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*monitoringv1alpha1.Silence, err error)
	// Get retrieves the Silence from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*monitoringv1alpha1.Silence, error)
	SilenceNamespaceListerExpansion
}

// silenceNamespaceLister implements the SilenceNamespaceLister
// interface.
type silenceNamespaceLister struct {
	listers.ResourceIndexer[*monitoringv1alpha1.Silence]
}
