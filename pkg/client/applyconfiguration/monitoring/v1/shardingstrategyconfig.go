// Copyright The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	monitoringv1 "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1"
)

// ShardingStrategyConfigApplyConfiguration represents a declarative configuration of the ShardingStrategyConfig type for use
// with apply.
type ShardingStrategyConfigApplyConfiguration struct {
	Mode     *monitoringv1.ShardingStrategyMode          `json:"mode,omitempty"`
	Topology *ShardingStrategyTopologyApplyConfiguration `json:"topology,omitempty"`
}

// ShardingStrategyConfigApplyConfiguration constructs a declarative configuration of the ShardingStrategyConfig type for use with
// apply.
func ShardingStrategyConfig() *ShardingStrategyConfigApplyConfiguration {
	return &ShardingStrategyConfigApplyConfiguration{}
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *ShardingStrategyConfigApplyConfiguration) WithMode(value monitoringv1.ShardingStrategyMode) *ShardingStrategyConfigApplyConfiguration {
	b.Mode = &value
	return b
}

// WithTopology sets the Topology field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Topology field is set to the value of the last call.
func (b *ShardingStrategyConfigApplyConfiguration) WithTopology(value *ShardingStrategyTopologyApplyConfiguration) *ShardingStrategyConfigApplyConfiguration {
	b.Topology = value
	return b
}
