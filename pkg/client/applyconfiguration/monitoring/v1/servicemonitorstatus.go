// Copyright The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ServiceMonitorStatusApplyConfiguration represents a declarative configuration of the ServiceMonitorStatus type for use
// with apply.
type ServiceMonitorStatusApplyConfiguration struct {
	Bindings []WorkloadBindingApplyConfiguration `json:"bindings,omitempty"`
}

// ServiceMonitorStatusApplyConfiguration constructs a declarative configuration of the ServiceMonitorStatus type for use with
// apply.
func ServiceMonitorStatus() *ServiceMonitorStatusApplyConfiguration {
	return &ServiceMonitorStatusApplyConfiguration{}
}

// WithBindings adds the given value to the Bindings field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Bindings field.
func (b *ServiceMonitorStatusApplyConfiguration) WithBindings(values ...*WorkloadBindingApplyConfiguration) *ServiceMonitorStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithBindings")
		}
		b.Bindings = append(b.Bindings, *values[i])
	}
	return b
}
